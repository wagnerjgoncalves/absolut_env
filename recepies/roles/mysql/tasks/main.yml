# Install server using a preseed file to set the root password
# 1) Check is MySQL Server is already installed. If so, do not set preseed file
---
- name: Check for previous installation
  shell: "[ -f /usr/sbin/mysqld ]"
  ignore_errors: True
  register: mysqld_exists

# 2) Preseed install options
- name: Push preseed file for debconf
  template:
    src=mysql_seed.j2
    dest=/root/mysql.seed
  when: mysqld_exists|failed

- name: Preseed mysql file
  command: /usr/bin/debconf-set-selections /root/mysql.seed
  when: mysqld_exists|failed

# 3) Install
- name: Install server
  apt: pkg={{item}} state=installed force=yes
  with_items:
    - mysql-client
    - libmysqlclient-dev
    - mysql-server
  when: mysqld_exists|failed

- name: Ensure MySQL daemon is running
  service: name=mysql state=started

# 4) Cleanup
- name: Delete mysql.seed file
  command: /bin/rm /root/mysql.seed
  when: mysqld_exists|failed

# Push configuration files
- name: Set my.cnf template
  template:
    src=my.cnf.j2
    dest=/etc/mysql/my.cnf
    owner=root mode=0644
  notify:
  - mysql-restart

# Secure installation
- name: Ensure python mysql is installed
  apt: pkg=python-mysqldb state=installed force=yes

- name: Remove empty password users
  mysql_user: name='' password='' host=localhost priv=*.*:USAGE state=absent login_user=root login_password={{ mysql_root_password }}

- name: Add napratica user
  mysql_user: name={{ mysql_napratica_user }} password={{ mysql_napratica_password }} priv=*.*:ALL,GRANT state=present login_user=root login_password={{ mysql_root_password }}

- name: Allow connections from host
  command: mysql -u root -p{{ mysql_root_password }} -e "GRANT ALL PRIVILEGES ON * . * TO '{{mysql_napratica_user}}'@'%'; FLUSH PRIVILEGES;"
